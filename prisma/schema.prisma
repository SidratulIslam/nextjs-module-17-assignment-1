// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model invoice_products {
  id         BigInt      @id @default(autoincrement())
  invoice_id BigInt
  product_id BigInt @unique
  user_id    BigInt
  qty        String
  sale_price String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      users   @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoice invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoices {
  id          BigInt      @id @default(autoincrement())
  total       String
  discount    String
  vat         String
  payable     String
  user_id     BigInt
  customer_id BigInt
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user             users              @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customer         customers          @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoice_products invoice_products[]
}

model products {
  id          BigInt      @id @default(autoincrement())
  user_id     BigInt
  category_id BigInt
  name        String
  price       String
  unit        String
  img_url     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user             users              @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  category         categories         @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoice_products invoice_products?
}

model customers {
  id         BigInt      @id @default(autoincrement())
  name       String
  email      String
  mobile     String
  user_id    BigInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user     users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices invoices[]
}

model users {
  id         BigInt      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  mobile     String   @unique
  password   String
  otp        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  categories       categories[]
  customers        customers[]
  products         products[]
  invoices         invoices[]
  invoice_products invoice_products[]
}

model categories {
  id         BigInt       @id @default(autoincrement())
  name       String
  user_id    BigInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  products products[]
  users    users     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}